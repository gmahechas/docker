1. Generar la clave privada de la CA y el certificado de la CA
# Generar la clave privada de la CA
openssl genpkey -algorithm RSA -out ca.key

# Generar el certificado de la CA (Common Name: redisdb-ca)
openssl req -x509 -new -nodes -key ca.key -sha256 -days 3650 -out ca.crt -subj "/CN=redisdb-ca"


2. Generar la clave privada del servidor, CSR, y el certificado del servidor para cada nodo
redisdb1
# Generar la clave privada del servidor para redisdb1
openssl genpkey -algorithm RSA -out redisdb1.key

# Generar una solicitud de firma de certificado (CSR) para redisdb1
openssl req -new -key redisdb1.key -out redisdb1.csr -subj "/CN=redisdb1.gmahechas.local"

# Firmar el certificado del servidor para redisdb1 con la CA
openssl x509 -req -in redisdb1.csr -CA ../ca.crt -CAkey ../ca.key -CAcreateserial -out redisdb1.crt -days 3650 -sha256


redisdb2
openssl genpkey -algorithm RSA -out redisdb2.key
openssl req -new -key redisdb2.key -out redisdb2.csr -subj "/CN=redisdb2.gmahechas.local"
openssl x509 -req -in redisdb2.csr -CA ../ca.crt -CAkey ../ca.key -CAcreateserial -out redisdb2.crt -days 3650 -sha256


redisdb3
openssl genpkey -algorithm RSA -out redisdb3.key
openssl req -new -key redisdb3.key -out redisdb3.csr -subj "/CN=redisdb3.gmahechas.local"
openssl x509 -req -in redisdb3.csr -CA ../ca.crt -CAkey ../ca.key -CAcreateserial -out redisdb3.crt -days 3650 -sha256


3. Generar la clave privada del cliente, CSR, y el certificado del cliente
openssl genpkey -algorithm RSA -out client.key
openssl req -new -key client.key -out client.csr -subj "/CN=redisdb-client"
openssl x509 -req -in client.csr -CA ../ca.crt -CAkey ../ca.key -CAcreateserial -out client.crt -days 3650 -sha256