apiVersion: v1
kind: Namespace
metadata:
  name: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/version: "1.0.0"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/version: "1.0.0"
  namespace: mongodb
spec:
  limits:
  - max:
      cpu: "2"
      memory: "2Gi"
    min:
      cpu: "1"
      memory: "1Gi"
    default: # limit
      cpu: "2"
      memory: "2Gi" 
    defaultRequest:
      cpu: "1"
      memory: "1Gi"
    type: Container
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/version: "1.0.0"
  namespace: mongodb
spec:
  hard:
    limits.cpu: "2"
    limits.memory: 2Gi
    requests.cpu: "1"
    requests.memory: 1Gi
    pods: "1"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/version: "1.0.0"
  namespace: mongodb
spec:
  storageClassName: manual
  persistentVolumeReclaimPolicy: Recycle
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 2Gi
  hostPath:
    path: "/mnt/mongodb"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/version: "1.0.0"
  namespace: mongodb
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  selector: 
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/version: "1.0.0"
  namespace: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/instance: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:4.2.10
        resources:
          requests:
            memory: "1Gi"
            cpu: "1"
          limits:
            memory: "2Gi"
            cpu: "2"
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: root
        ports:
          - containerPort: 27017
        volumeMounts:
          - mountPath: "/data/db"
            name: mongodb
      volumes:
        - name: mongodb
          persistentVolumeClaim:
            claimName: mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/version: "1.0.0"
  namespace: mongodb
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: mongodb
  ports:
    - name: mongodb
      protocol: TCP
      nodePort: 30001
      port: 27017
      targetPort: 27017