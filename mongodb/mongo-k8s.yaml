apiVersion: v1
kind: Namespace
metadata:
  name: mongodb-namespace
  labels:
    app.kubernetes.io/name: mongodb-namespace
    app.kubernetes.io/instance: mongodb-namespace
    app.kubernetes.io/version: "1.0.0"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: mongodb-limit-range
  labels:
    app.kubernetes.io/name: mongodb-limit-range
    app.kubernetes.io/instance: mongodb-limit-range
    app.kubernetes.io/version: "1.0.0"
  namespace: mongodb-namespace
spec:
  limits:
    - max:
        cpu: "2"
        memory: "2Gi"
      min:
        cpu: "1"
        memory: "1Gi"
      default: # limit
        cpu: "2"
        memory: "2Gi"
      defaultRequest:
        cpu: "1"
        memory: "1Gi"
      type: Container
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: mongodb-resource-quota
  labels:
    app.kubernetes.io/name: mongodb-resource-quota
    app.kubernetes.io/instance: mongodb-resource-quota
    app.kubernetes.io/version: "1.0.0"
  namespace: mongodb-namespace
spec:
  hard:
    limits.cpu: "2"
    limits.memory: 2Gi
    requests.cpu: "1"
    requests.memory: 1Gi
    pods: "1"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-persistent-volume
  labels:
    app.kubernetes.io/name: mongodb-persistent-volume
    app.kubernetes.io/instance: mongodb-persistent-volume
    app.kubernetes.io/version: "1.0.0"
  namespace: mongodb-namespace
spec:
  storageClassName: manual
  #persistentVolumeReclaimPolicy: Recycle
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 2Gi
  hostPath:
    path: "/mnt/mongodb"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-persistent-volume-claim
  labels:
    app.kubernetes.io/name: mongodb-persistent-volume-claim
    app.kubernetes.io/instance: mongodb-persistent-volume-claim
    app.kubernetes.io/version: "1.0.0"
  namespace: mongodb-namespace
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb-persistent-volume
      app.kubernetes.io/instance: mongodb-persistent-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  labels:
    app.kubernetes.io/name: mongodb-deployment
    app.kubernetes.io/instance: mongodb-deployment
    app.kubernetes.io/version: "1.0.0"
  namespace: mongodb-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb-pod
      app.kubernetes.io/instance: mongodb-pod
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb-pod
        app.kubernetes.io/instance: mongodb-pod
        app.kubernetes.io/version: "1.0.0"
    spec:
      containers:
        - name: mongodb
          image: mongo:4.2.10
          resources:
            requests:
              memory: "1Gi"
              cpu: "1"
            limits:
              memory: "2Gi"
              cpu: "2"
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: root
          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath: "/data/db"
              name: mongodb-volume
      volumes:
        - name: mongodb-volume
          persistentVolumeClaim:
            claimName: mongodb-persistent-volume-claim
---
#apiVersion: v1
#kind: Service
#metadata:
#  name: mongodb-service
#  labels:
#    app.kubernetes.io/name: mongodb-service
#    app.kubernetes.io/instance: mongodb-service
#    app.kubernetes.io/version: "1.0.0"
#  namespace: mongodb-namespace
#spec:
#  type: ClusterIP
#  selector:
#    app.kubernetes.io/name: mongodb-pod
#    app.kubernetes.io/instance: mongodb-pod
#  ports:
#    - name: mongodb-port
#      protocol: TCP
#      port: 27017
#      targetPort: 27017
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  labels:
    app.kubernetes.io/name: mongodb-service
    app.kubernetes.io/instance: mongodb-service
    app.kubernetes.io/version: "1.0.0"
  namespace: mongodb-namespace
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: mongodb-pod
    app.kubernetes.io/instance: mongodb-pod
  ports:
    - name: mongodb-port
      protocol: TCP
      nodePort: 30001
      port: 27017
      targetPort: 27017
